import{g as o}from"./storage-uVl3v7f4.js";async function i(t){const e=await o(),s=new SpeechSynthesisUtterance(t);if(s.rate=e.rate,e.voice){const r=speechSynthesis.getVoices().find(n=>n.name===e.voice);r&&(s.voice=r)}speechSynthesis.cancel(),speechSynthesis.speak(s)}chrome.runtime.onMessage.addListener((t,e,s)=>{try{if(console.debug("[readit] content script received message",t,"from",e),t&&t.kind==="READ_SELECTION"){const r=window.getSelection()?.toString().trim();console.debug("[readit] selection text:",r),r&&i(r)}else t&&t.kind==="READ_TEXT"&&t.text?.trim()&&i(t.text.trim())}catch(r){console.warn("[readit] content script handler error",r)}return!1});window.addEventListener("readit-proxy-speak",t=>{try{const e=t?.detail;if(!e||typeof e.text!="string")return;chrome.runtime.sendMessage({action:"proxy-speak",text:e.text},s=>{try{window.dispatchEvent(new CustomEvent("readit-proxy-speak-response",{detail:s}))}catch{}})}catch(e){console.warn("readit: proxy-speak bridge failed",e)}});window.addEventListener("message",t=>{try{if(t.source!==window)return;const e=t.data;if(!e||e.source!=="readit"||e.type!=="proxy-speak")return;const s=typeof e.text=="string"?e.text:"",r=e.id;try{chrome.runtime.sendMessage({action:"proxy-speak",text:s},n=>{try{window.postMessage({source:"readit-response",id:r,resp:n},"*")}catch{}})}catch(n){try{window.postMessage({source:"readit-response",id:r,resp:{ok:!1,error:String(n)}},"*")}catch{}}}catch(e){console.warn("readit: postMessage bridge failed",e)}});
